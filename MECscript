local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
getgenv().TeleportCont = false;
_G.OpeningNow = false
local EggName = ""
local EggNumb = ""
local teleportDelay = 1


local Window = Rayfield:CreateWindow({
   Name = "+1 Money Every Click  -- Exploit",
   LoadingTitle = "BreApple Hub",
   LoadingSubtitle = "by BreApple",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "YoutubeBreAppleHub"
   },
})

local GameTab = Window:CreateTab("üè† Home", nil) -- Title, Image

local ToggleAC = GameTab:CreateToggle({
    Name = "Auto Click (Very Fast)",
    CurrentValue = _G.autoClickSit,
    Flag = "AutoClick", 
    Callback = function(auClick)

        _G.autoClickSit = not _G.autoClickSit
        
        while _G.autoClickSit == true do
            game:GetService("ReplicatedStorage"):FindFirstChild("events-shared/network@GlobalEvents").placeBlock:FireServer()
            wait()
        end

   end,
})

local ToggleAR = GameTab:CreateToggle({
    Name = "Auto Rebirth",
    CurrentValue = _G.AutoRebirth,
    Flag = "AutoRebirth", 
    Callback = function(auRebirth)

        _G.AutoRebirth = not _G.AutoRebirth
        

        while _G.AutoRebirth == true do
            local args = {
                [1] = 16
            }
            
            game:GetService("ReplicatedStorage"):FindFirstChild("functions-shared/network@GlobalFunctions"):FindFirstChild("s:rebirth"):FireServer(unpack(args))
            wait(3)
        end

   end,
})


local ToggleEB = GameTab:CreateToggle({
    Name = "Equip Best",
    CurrentValue = _G.EquipBest,
    Flag = "EquipBest", 
    Callback = function(EqBest)

        _G.EquipBest = not _G.EquipBest
        

        while _G.EquipBest == true do
            local args = {
                [1] = 28
            }
            
            game:GetService("ReplicatedStorage"):FindFirstChild("functions-shared/network@GlobalFunctions"):FindFirstChild("s:equipBestPets"):FireServer(unpack(args))
            wait(3)
        end

   end,
})

MainSection = GameTab:CreateSection("Auto Open Egg ‚¨á")


function bringData(eggVal)
    if EggName == "Grass Egg" then return(26) end
    if EggName == "Stone Egg" then return(27) end
    if EggName == "Cactus Egg" then return(28) end
    if EggName == "Sandstone Egg" then return(29) end
    if EggName == "Snowman Egg" then return(30) end
    if EggName == "Ice Egg" then return(31) end
    if EggName == "Warped Egg" then return(32) end
        
end

function bringName(eggNmaeVal)
    if EggName == "$250 Grass Egg" then return("Grass Egg") end
    if EggName == "$750 Stone Egg" then return("Stone Egg") end
    if EggName == "$3.75K Cactus Egg" then return("Cactus Egg") end
    if EggName == "$11.25K Sandstone Egg" then return("Sandstone Egg") end
    if EggName == "$56.25K Snowman Egg" then return("Snowman Egg") end
    if EggName == "$168.75K Ice Egg" then return("Ice Egg") end
    if EggName == "$450K Warped Egg" then return("Warped Egg") end
    
end


local DropdownAO = GameTab:CreateDropdown({
   Name = "Auto Open",
   Options = {"$250 Grass Egg" , "$750 Stone Egg", "$3.75K Cactus Egg", "$11.25K Sandstone Egg", "$56.25K Snowman Egg", "$168.75K Ice Egg", "$450K Warped Egg"},
   CurrentOption = {"None"},
   MultipleOptions = false,
   Flag = "AutoOpenEgg",
   Callback = function(Option)
        print (Option[1])
        EggName = Option[1]
        
        EggName = bringName(EggName)
        EggNumb = bringData(EggName)
   end,
})

local ToggleStOpen = GameTab:CreateToggle({
    Name = "Start Opening",
    CurrentValue = OpeningNow,
    Flag = "AutoStart", 
    Callback = function(EqBest)

        OpeningNow = not OpeningNow
        print(OpeningNow)
        if OpeningNow == true then

            while OpeningNow == true do
                local args = {
                    [1] = EggNumb,
                    [2] = EggName
                }
                game:GetService("ReplicatedStorage"):FindFirstChild("functions-shared/network@GlobalFunctions"):FindFirstChild("s:openEgg"):FireServer(unpack(args))
                wait()
            end
        end
   end,
})

MainSection = GameTab:CreateSection("Auto Craft ‚¨á")

local ToggleAuCraft = GameTab:CreateToggle({
    Name = "Auto Craft",
    CurrentValue = _G.AutoCraft,
    Flag = "AutoCraft", 
    Callback = function(auCraft)

        _G.AutoCraft = not _G.AutoCraft
        while _G.AutoCraft == true do
            
            local args = {
                [1] = 50
            }
            
            game:GetService("ReplicatedStorage"):FindFirstChild("functions-shared/network@GlobalFunctions"):FindFirstChild("s:craftAllPets"):FireServer(unpack(args))
            wait(3)
        end

   end,
})

local MainTab = Window:CreateTab("üèÉ Player Settings", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

local TeleportTab = Window:CreateTab("üëª Ô∏èTeleport", nil) -- Title, Image


Rayfield:Notify({
   Title = "Script Executed Successfully",
   Content = "have fun",
   Duration = 5,
   Image = nil
})

--INFITINE JUMP
local ToggleIJ = MainTab:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = _G.infinJump,
    Flag = "Toggle1",
    
    Callback = function(infJump)
        _G.infinJump = not _G.infinJump
        
        if _G.infinJumpStarted == nil then
           _G.infinJumpStarted = true
           
           game.StarterGui:SetCore("SendNotification", {Title="BreApple Hub"; Text="Infinite Jump Activatted!"; Duration=5;})
        
           local plr = game:GetService('Players').LocalPlayer
           local m = plr:GetMouse()
           m.KeyDown:connect(function(k)
               if _G.infinJump then
                   if k:byte() == 32 then
                       humanoid = game:GetService('Players').LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
                       humanoid:ChangeState('Jumping')
                       wait()
                       humanoid:ChangeState('Seated')
                   end
                end
            end)
        end
   end,
})

--FLY UI
local ButtonFLY = MainTab:CreateButton({
   Name = "FLY UI",
   Callback = function()
       loadstring(game:HttpGet("https://raw.githubusercontent.com/BreApple/RobloxUI/main/flyUIscript"))()
   end,
})


--WALKSPEED
--local Label = MainTab:CreateLabel("‚¨á‚¨á Set Walk Speed ‚¨á‚¨á")
MainSection = MainTab:CreateSection("Set Walks Speed ‚¨á")


local InputWS = MainTab:CreateInput({
   Name = "Type the Walkspeed You Want",
   PlaceholderText = "Type Here",
   RemoveTextAfterFocusLost = false,
   Callback = function(wSpeedNow)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = wSpeedNow
   end,
})


local SliderWS = MainTab:CreateSlider({
   Name = "Walkspeed Slider",
   Range = {0, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed,
   Flag = "Slider1", 
   Callback = function(wsSliderVal)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = wsSliderVal
   end,
})


--local Label = MainTab:CreateLabel("‚¨á‚¨á Set Jump Power ‚¨á‚¨á")
MainSection = MainTab:CreateSection("Set Jump Power ‚¨á")

--JUMP POWER
local InputJP = MainTab:CreateInput({
   Name = "Type the Jump Power You Want",
   PlaceholderText = "Type Here",
   RemoveTextAfterFocusLost = false,
   Callback = function(jPowerNow)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jPowerNow
   end,
})


local SliderJP = MainTab:CreateSlider({
   Name = "Jump Power Slider",
   Range = {0, 500},
   Increment = 1,
   Suffix = "Jump",
   CurrentValue = game.Players.LocalPlayer.Character.Humanoid.JumpPower,
   Flag = "Slider1", 
   Callback = function(jpSliderVal)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jpSliderVal
   end,
})


--local Label = MainTab:CreateLabel("‚¨á‚¨á Set Hip Height ‚¨á‚¨á")
MainSection = MainTab:CreateSection("Set Hip Height ‚¨á")


--HIP HEIGHT
local InputHH = MainTab:CreateInput({
   Name = "Type the Hip Height You Want",
   PlaceholderText = "Type Here",
   RemoveTextAfterFocusLost = false,
   Callback = function(hHeightNow)
        game.Players.LocalPlayer.Character.Humanoid.HipHeight = hHeightNow
   end,
})


local SliderHH = MainTab:CreateSlider({
   Name = "Hip Height Slider",
   Range = {0, 100},
   Increment = 1,
   Suffix = "",
   CurrentValue = 2,
   Flag = "Slider1", 
   Callback = function(hhSliderVal)
        game.Players.LocalPlayer.Character.Humanoid.HipHeight = hhSliderVal
   end,
})


--T E L E P O R T TAB
MainSection = TeleportTab:CreateSection("Teleport to Players ‚¨á")

--teleporat to a Player
local InputTP = TeleportTab:CreateInput({
   Name = "Type the Player Name You Want to Teleport",
   PlaceholderText = "Type Here",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)

        print(Text)
        local teleportName = Text
        
        local targetPlyr = game.Players.LocalPlayer.Character
        local teleportTo = game:GetService("Workspace"):FindFirstChild(teleportName):FindFirstChild("HumanoidRootPart")
        
        if TeleportCont == false then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = teleportTo.CFrame
        else
            while TeleportCont == true do
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = teleportTo.CFrame
                wait(teleportDelay)
            end
        end

   end,
})

--teleport Continuously to a Player
local ToggleTP = TeleportTab:CreateToggle({
   Name = "Teleport Continuously",
   CurrentValue = TeleportCont,
   Flag = "Toggle2", 
   Callback = function(Value)
       
       TeleportCont = not TeleportCont
       
   end,
})

--teleport delay
local SliderTP = TeleportTab:CreateSlider({
   Name = "Teleport Delay",
   Range = {1, 100},
   Increment = 1,
   Suffix = "Delay",
   CurrentValue = 1,
   Flag = "Slider2", 
   Callback = function(Value)
        teleportDelay = Value
   end,
})
